= Ruby Client for the Asynchronous URL Fetch Service

A Ruby application can make an asynchronous request to the URL Fetch service
to fetch a URL in the background, while the application code does other things.

The URL Fetch service is entirely written in Erlang. See
http://urlfetch.googlecode.com for further information.

== Copyright and License

Copyright 2010 Tobias Rodaebel

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

== Requirements

The urlfetch library requires the Ruby programming language version 1.8.7 or
higher installed in your system.

== Usage

In order to make asynchronous URL fetch calls, the urlfetch library provides a
low-level API.

  require 'urlfetch'

  # Specify the address of the the URL Fetch service
  addr = Urlfetch::Address.new(host='127.0.0.1', port=10190)

Creating and using the client is straightforward.

  # Create a new client
  client = Urlfetch::URLFetchClient.new(addr)

  # Start a fetch call
  fetch_id = client.start_fetch("http://www.ruby-lang.org")

  # Get the result
  result = client.get_result(fetch_id)

The next sample shows how retrieve results without waiting/blocking.

  nowait = true

  begin
    result = client.get_result(fetch_id, nowait=nowait)
  rescue Urlfetch::DownloadError
    # Do something else
    nowait=false
    retry
  ensure
    client.close
  end
